generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String
  organisation String
  role         String
  createdAt    DateTime @default(now())
  prompts      Prompt[]
}

model Prompt {
  id                   String                 @id @default(cuid())
  userId               String
  researchQuestion     String
  createdAt            DateTime               @default(now())
  searchResultsSummary String                 @default("")
  hypothesisGeneration HypothesisGeneration[]
  // Reinitiator          Reinitiator[]
  searchTerms          SearchTerms[]
  user                 User                   @relation(fields: [userId], references: [id])

  @@index([userId])
}

model SearchTerms {
  id            String          @id @default(cuid())
  question      String
  createdAt     DateTime        @default(now())
  promptId      String
  searchTerm    String
  explanation   String          @default("")
  newSearchTerm Boolean         @default(false)
  savedPapers   SavedPaper[]
  SearchResults SearchResults[]
  prompt        Prompt          @relation(fields: [promptId], references: [id])

  @@index([promptId])
}

model SavedPaper {
  id            String      @id @default(cuid())
  paperId       String
  title         String
  authors       String[]
  summary       String      @default("")
  text          String      @default("")
  publishedYear Int         @default(0)
  url           String      @default("")
  SearchTerms   SearchTerms @relation(fields: [searchTermsId], references: [id])
  searchTermsId String
}

model SearchResults {
  id           String      @id @default(cuid())
  searchResult String
  createdAt    DateTime    @default(now())
  searchTermId String
  searchTerms  SearchTerms @relation(fields: [searchTermId], references: [id])

  // @@unique([searchTermId, searchResult])
  @@index([searchTermId])
}

model HypothesisGeneration {
  id                  String              @id @default(cuid())
  promptId            String
  hypothesis          String
  hypothesisTitle     String              @default("")
  proposedExperiments String              @default("")
  justification       String              @default("")
  forcedAssociations  ForcedAssociation[]
  createdAt           DateTime            @default(now())

  prompt Prompt @relation(fields: [promptId], references: [id])

  // @@unique([hypothesis])
  @@index([promptId])
}

model ForcedAssociation {
  id                     String               @id @default(cuid())
  HypothesisGenerationId String
  association            String
  createdAt              DateTime             @default(now())
  hypothesisGeneration   HypothesisGeneration @relation(fields: [HypothesisGenerationId], references: [id])

  // @@unique([association])
  @@index([HypothesisGenerationId])
}

// model Reinitiator {
//   id           String   @id @default(cuid())
//   promptId     String
//   reinitiation String
//   createdAt    DateTime @default(now())
//   prompt       Prompt   @relation(fields: [promptId], references: [id])

//   @@unique([promptId, reinitiation])
//   @@index([promptId])
// }
